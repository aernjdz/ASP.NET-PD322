﻿
@model List<ProductItemViewModel>

<div class="container mt-3 mb-5">
    <h2 class="text-center">Products</h2>

    <div class="row">
        @foreach (var p in Model)
        {
            <div class="col-lg-3 col-md-3 mt-3">
                <div class="card ">
                    @if (p.Images?.Count > 1)
                    {
                        <div id="carousel-@p.Id" class="carousel slide m-3">
                            <div class="carousel-inner">
                                @for (var i = 0; i < p.Images?.Count; i++)
                                {
                                    var image = p.Images.ElementAt(i);
                                    <div class="carousel-item @(i == 0 ? "active" : "")">
                                        <img src="@Url.Content("~/images/" + image)" alt="@p.Name" />
                                    </div>
                                }
                            </div>
                            <button class="carousel-control-prev" type="button" data-bs-target="#carousel-@p.Id" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon"></span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#carousel-@p.Id" data-bs-slide="next">
                                <span class="carousel-control-next-icon"></span>
                            </button>
                        </div>
                    }
                    else
                    {
                        <div class="one-img m-3">
                            <img src="@Url.Content("~/images/" + p.Images?.FirstOrDefault())" alt="@p.Name" />
                        </div>
                    }
                    <div class="card-body d-flex flex-column justify-content-between">
                        @{
                            const int MAX_LEN = 31;
                            var name = p.Name.Length > MAX_LEN ? p.Name.Substring(0, MAX_LEN) + "..." : p.Name;
                        }
                        @name
                        <p class="card-text text-success">@p.Price.ToString("C")</p>
                        
                    </div>
                </div>
            </div>

           
        }
    </div>
</div>


<style>
    .card {
        width: 100%;
        max-width: 300px;
        height: 100%;
    }

    .carousel-inner img, .one-img img {
        max-width: 100%;
        max-height: 100%;
        object-fit: contain;
        display: flex;
        align-items: center;
    }

    .carousel-inner {
        height: 250px;
        display: flex;
        align-items: center;
    }

    .one-img {
        height: 250px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .card-body {
        display: flex;
        flex-direction: column;
        text-align: center;
    }

    .carousel-control-prev-icon,
    .carousel-control-next-icon {
        background-color: gray;
        border-radius: 20%;
    }

</style>